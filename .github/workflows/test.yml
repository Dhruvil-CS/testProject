name: Test To-Do CLI Application

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Cache Python dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-python-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-python-
    
      - name: Setup python path
        run: echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt


      - name: Cache SonarQube scanner
        uses: actions/cache@v2
        with:
          path: ${{ runner.home }}/sonar-scanner
          key: sonarqube-${{ runner.os }}-4.6.2.2472
          restore-keys: |
            sonarqube-${{ runner.os }}-

      - name: Install SonarQube Scanner if not cached
        if: steps.cache-sonarqube.outputs.cache-hit != 'true'
        run: |
          curl -sSLo sonarqube-scanner.zip https://github.com/SonarSource/sonar-scanner-cli/releases/download/4.6.2.2472/sonar-scanner-cli-4.6.2.2472-linux.zip
          unzip sonarqube-scanner.zip -d $HOME/sonar-scanner

      - name: Add SonarQube scanner to PATH
        run: echo "$HOME/sonar-scanner/sonar-scanner-4.6.2.2472-linux/bin" >> $GITHUB_PATH

      - name: Run tests and generate reports
        run: |
          chmod +x run_tests.sh
          pytest --maxfail=5 --junitxml=report.xml --cov=. --cov-report xml:coverage.xml
        continue-on-error: true

      - name: Run SonarQube analysis
        run: |
          sonar-scanner \
            -Dsonar.projectKey=your_project_key \
            -Dsonar.sources=. \
            -Dsonar.host.url=https://your-sonarqube-server-url \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.python.coverage.reportPaths=coverage.xml \
            -Dsonar.junit.reportPaths=report.xml

      - name: Upload test results as artifact
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: report.xml
        
